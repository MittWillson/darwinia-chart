{{- include "common.values.setup" . }}

{{- define "davalid.command" -}}
{{- $runtime := .Values.config.network | default "darwinia" -}}
{{- $mode := .Values.config.mode | default "node" -}}
{{- $isValidator := eq $mode "validator" }}
command: ["darwinia"]
args:
  - "--base-path"
  - "/data"
  - "--rpc-port"
  - "9933"
  - "--ws-port"
  - "9944"
  - "--name"
  - {{ include "davalid.runnerName" . | quote }}
  {{- if $runtime }}
  - "--chain"
  - {{ $runtime | quote }}
  {{- end }}
  {{- if $isValidator }}
  - "--unsafe-rpc-external"
  - "--rpc-methods"
  - "Unsafe"
  - "--validator"
  {{- end }}
  {{- if and (not $isValidator) .Values.config.external }}
  - "--rpc-external"
  - "--ws-external"
  - "--rpc-cors"
  - "all"
  {{- end }}
  {{- if .Values.config.targetGasPrice }}
  - "--target-gas-price"
  - {{ .Values.config.targetGasPrice | quote }}
  {{- end }}
  {{- if .Values.config.peers }}
  - "--out-peers"
  - {{ .Values.config.peers | quote }}
  {{- end }}
  {{- range $arg := .Values.args }}
  - {{ $arg | quote }}
  {{- end }}
{{- end -}}

{{- define "davalid.storage" -}}
{{- if .Values.snapshot.enabled -}}
persistence:
  {{ .Values.persistence | toYaml | indent 2 }}
  snapshot:
    enabled: true
    type: emptyDir
{{- end -}}
{{- end -}}

{{- define "davalid.snapshot" -}}
{{- if .Values.snapshot.enabled -}}
{{- $runtime := .Values.config.network | default "darwinia" }}
initContainers:
- name: init-snapshot
  image: {{ .Values.snapshot.image.repository }}:{{ .Values.snapshot.image.tag }}
  volumeMounts:
    # Mount an emptyDir volume on /snapshot helps continue downloading if the init container restarted.
    - name: snapshot
      mountPath: /snapshot
    # Do not forget to mount the chain database volume.
    - name: data
      mountPath: /data
  env:
    #
    # Required, the URL of the snapshot archive
    # Supported file types:
    #
    # - Gzip tar (URL must ends with .tar.gz)
    # - Zstandard tar (URL must ends with .tar.zst)
    # - 7-Zip (URL must ends with .7z)
    #
    - name: ARCHIVE_URL
      value: {{ .Values.snapshot.archive }}

    #
    # Required, the path of chain directory
    # Example (assume with the node CLI option `--base=/data`):
    #
    # - Kusama Network:   /data/chains/ksmcc3
    # - Polkadot Network: /data/chains/polkadot
    # - Darwinia Network: /data/chains/darwinia
    # - Crab Network:     /data/chains/crab
    #
    - name: CHAIN_DIR
      value: /data/chains/{{ $runtime }}

    #
    # Optional, if set, `chmod -R $CHMOD` will be used to reset the permissions of $CHAIN_DIR
    # Example: "777"
    #
    - name: CHMOD
      value: "777"

    #
    # Optional, if set, `chown -R $CHOWN` will be used to reset owners (and groups) of $CHAIN_DIR
    # Example: 1000:1000
    #
    - name: CHOWN
      value: 1000:1000
{{ .Values.initContainers | toYaml }}
{{- end -}}
{{- end -}}

{{- $snapshot := include "davalid.snapshot" . | fromYaml }}
{{- $_ := mustMergeOverwrite .Values $snapshot -}}
{{- $_ = mustMergeOverwrite .Values (include "davalid.command" . | fromYaml) -}}
{{- $_ = mustMergeOverwrite .Values (include "davalid.storage" . | fromYaml) -}}
{{ include "common.all" . }}